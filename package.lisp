;;;; package.lisp

(defpackage #:taclib
  (:use #:cl)
  (:export
    #:forhash
    #:forvec
    #:for-maps-list
    #:with-vals
    #:make-hash
    #:make-assoc
    #:hash
    #:merge-into
    #:keys
    #:vals
    #:copy-hash
    #:hash->assoc
    #:assoc->hash
    #:hash->vector
    #:vector->hash
    #:func->hash
    #:hash->func
    #:update
    #:update-keys
    #:update-vals
    #:defvec
    #:hash-accessor
    #:assoc-accessor
    #:map-key
    #:select-keys
    #:select-vals
    #:has-key-p
    #:make-set
    #:map-pairs
    #:on-map
    #:map-by-key
    #:take
    #:skip
    #:group-by
    #:cycled
    #:concat
    #:connect
    #:hash-set
    #:into-vector
    #:into-list
    #:into-string
    #:list-from-to
    #:vector-from-to
    #:list-range
    #:vector-range
    #:once
    #:->
    #:last->
    #:applyv
    #:pipe
    #:macfun
    #:lets
    #:conds
    #:cases
    #:with-map-keys
    #:with-maps-keys
    #:dot
    #:len
    #:norm
    #:repeat
    #:vv #:vvv #:vvvv
    #:cross
    #:mat-identity
    #:transponed
    #:mtransponed
    #:transponed-4x4
    #:mul-mat
    #:mul-mat-4x4
    #:mul-mats-4x4
    #:transform-point
    #:transform-vector
    #:mul-mats
    #:mmul-mat
    #:vec-16->mat-4x4
    #:mat-4x4->vec-16
    #:mat-scale-4x4
    #:classic-matrix
    #:mat-perspective
    #:mat-translation
    #:mat-rotation-x
    #:mat-rotation-y
    #:mat-rotation-z
    #:mat-rotation
    #:mat-pos-rot
    #:mat-pos-rot-inversed
    #:v+ #:v- #:v* #:v/
    #:l+ #:l- #:l* #:l/
    #:part
    #:mpart
    #:comp
    #:mcomp
    #:sfun
    #:if-let
    #:file-parent
    #:concat-path
    #:symbol-of
    #:keyword-of
    #:search-tree
    #:assoc->tree
    #:tree-content
    #:tree-min
    #:tree-max
    #:make-tree
    #:tree-root
    #:tree-height
    #:tree-l
    #:tree-r
    #:find-bounds
  )
)
